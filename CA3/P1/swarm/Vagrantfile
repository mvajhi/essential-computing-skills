IMAGE = "docker-ubuntu-22.04"

MASTER_COUNT = 3
WORKER_COUNT = 1

all_hosts = []
(1..MASTER_COUNT).each do |id|
  all_hosts << ["192.168.56.11#{id}", "master#{id}"]
end
(1..WORKER_COUNT).each do |id|
  all_hosts << ["192.168.56.21#{id}", "worker#{id}"]
end

is_created_cluster = false
master_ip = nil

Vagrant.configure(2) do |config|
  (1..MASTER_COUNT).each do |master_id|
    config.vm.define "master#{master_id}" do |master_vm|
      master_vm.vm.box = IMAGE
      master_vm.vm.hostname = "master#{master_id}"
      master_vm.vm.network "private_network", ip: "192.168.56.11#{master_id}"
      master_vm.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 1
      end

      host_entries = all_hosts.map { |ip, name| "echo '#{ip} #{name}' >> /etc/hosts" }.join(" && ")
      master_vm.vm.provision "shell", inline: <<-SHELL
        #{host_entries}
      SHELL

      if !is_created_cluster
        master_ip = "192.168.56.11#{master_id}"
        is_created_cluster = true
        master_vm.vm.provision "shell", inline: <<-SHELL
          echo "Creating Docker Swarm cluster on #{master_ip}"
          docker swarm init --advertise-addr #{master_ip}
          docker swarm join-token manager -q > /vagrant/manager.token
          docker swarm join-token worker -q > /vagrant/worker.token
          nohup bash /vagrant/deploy.sh &
        SHELL
      else
        master_vm.vm.provision "shell", inline: <<-SHELL
          echo "Joining existing Docker Swarm cluster on #{master_ip}"
          docker swarm join --token $(cat /vagrant/manager.token) #{master_ip}:2377
        SHELL
      end
    end
  end

  (1..WORKER_COUNT).each do |worker_id|
    config.vm.define "worker#{worker_id}" do |worker_vm|
      worker_vm.vm.box = IMAGE
      worker_vm.vm.hostname = "worker#{worker_id}"
      worker_vm.vm.network "private_network", ip: "192.168.56.21#{worker_id}"
      worker_vm.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 1
      end
      
      host_entries = all_hosts.map { |ip, name| "echo '#{ip} #{name}' >> /etc/hosts" }.join(" && ")
      worker_vm.vm.provision "shell", inline: <<-SHELL
        #{host_entries}
      SHELL
      
      worker_vm.vm.provision "shell", inline: <<-SHELL
        echo "Joining Docker Swarm cluster on #{master_ip}"
        docker swarm join --token $(cat /vagrant/worker.token) #{master_ip}:2377
      SHELL
    end
  end
end
